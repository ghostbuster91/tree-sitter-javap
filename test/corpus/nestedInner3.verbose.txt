================================================================================
Nested Inner 3 verbose
================================================================================

Classfile /home/kghost/workspace/tree-sitter-javap/test/corpus/Nested$Inner3.class
  Last modified Feb 19, 2022; size 395 bytes
  MD5 checksum 98fd6eafc75081002a5f7cf129e0aee7
  Compiled from "Nested.java"
public interface Nested$Inner3<T extends java.lang.Comparable<? super T>>
  minor version: 0
  major version: 55
  flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT
  this_class: #1                          // Nested$Inner3
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 1, attributes: 4
Constant pool:
   #1 = Class              #14            // Nested$Inner3
   #2 = Class              #17            // java/lang/Object
   #3 = Utf8               call
   #4 = Utf8               (Ljava/lang/String;)V
   #5 = Utf8               Exceptions
   #6 = Class              #18            // java/lang/IllegalArgumentException
   #7 = Class              #19            // java/lang/ArrayIndexOutOfBoundsException
   #8 = Utf8               Signature
   #9 = Utf8               <T::Ljava/lang/Comparable<-TT;>;>Ljava/lang/Object;
  #10 = Utf8               SourceFile
  #11 = Utf8               Nested.java
  #12 = Utf8               NestHost
  #13 = Class              #20            // Nested
  #14 = Utf8               Nested$Inner3
  #15 = Utf8               Inner3
  #16 = Utf8               InnerClasses
  #17 = Utf8               java/lang/Object
  #18 = Utf8               java/lang/IllegalArgumentException
  #19 = Utf8               java/lang/ArrayIndexOutOfBoundsException
  #20 = Utf8               Nested
{
  public abstract void call(java.lang.String) throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException;
    descriptor: (Ljava/lang/String;)V
    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT
    Exceptions:
      throws java.lang.IllegalArgumentException, java.lang.ArrayIndexOutOfBoundsException
}
Signature: #9                           // <T::Ljava/lang/Comparable<-TT;>;>Ljava/lang/Object;
SourceFile: "Nested.java"
NestHost: class Nested
InnerClasses:
  protected static #15= #1 of #13;        // Inner3=class Nested$Inner3 of class Nested


--------------------------------------------------------------------------------

(source_file
  (header
    (header_info
      (file_path))
    (header_info_last_mod)
    (header_info_md5
      (md5))
    (header_info_compile))
  (class_info_def
    (modifiers)
    (interface_keyword)
    (identifier)
    (type_parameters
      (type_parameter
        (type_identifier)
        (type_bound
          (extends)
          (generic_type
            (scoped_type_identifier
              (scoped_type_identifier
                (type_identifier)
                (type_identifier))
              (type_identifier))
            (type_arguments
              (wildcard
                (super)
                (type_identifier)))))))
    (class_info_item
      (class_info_item_simple
        (number)))
    (class_info_item
      (class_info_item_simple
        (number)))
    (class_info_item
      (flag_def
        (hex_value)
        (flag_value)
        (flag_value)
        (flag_value)))
    (class_info_item
      (class_info_item_simple
        (number)
        (comment)))
    (class_info_item
      (class_info_item_simple
        (number)
        (comment)))
    (class_info_item
      (class_info_item_simple
        (number)
        (number)
        (number)
        (number))))
  (constant_pool_def
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value)))
  (block
    (method_declaration
      (modifiers)
      (primitive_type)
      (identifier)
      (args
        (scoped_type_identifier
          (scoped_type_identifier
            (type_identifier)
            (type_identifier))
          (type_identifier)))
      (method_throws
        (scoped_type_identifier
          (scoped_type_identifier
            (type_identifier)
            (type_identifier))
          (type_identifier))
        (scoped_type_identifier
          (scoped_type_identifier
            (type_identifier)
            (type_identifier))
          (type_identifier))))
    (descriptor_def
      (descriptor_value))
    (flag_def
      (hex_value)
      (flag_value)
      (flag_value))
    (exceptions
      (method_throws
        (scoped_type_identifier
          (scoped_type_identifier
            (type_identifier)
            (type_identifier))
          (type_identifier))
        (scoped_type_identifier
          (scoped_type_identifier
            (type_identifier)
            (type_identifier))
          (type_identifier)))))
  (footer
    (signature
      (number)
      (comment))
    (source_file_def)
    (nest_host
      (identifier))
    (inner_classes
      (modifiers)
      (number)
      (number)
      (number)
      (comment))))
