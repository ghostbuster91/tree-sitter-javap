================================================================================
Generic Method verbose
================================================================================

Classfile /home/kghost/workspace/tree-sitter-javap/example/GenericMethod.class
  Last modified Feb 26, 2022; size 481 bytes
  MD5 checksum 3a9a887a95f8521cf8a22fd46164af81
  Compiled from "GenericMethod.java"
public class GenericMethod
  minor version: 0
  major version: 55
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #5                          // GenericMethod
  super_class: #6                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 2, attributes: 1
Constant pool:
   #1 = Methodref          #6.#17         // java/lang/Object."<init>":()V
   #2 = Class              #18            // java/lang/RuntimeException
   #3 = String             #19            // x
   #4 = Methodref          #2.#20         // java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
   #5 = Class              #21            // GenericMethod
   #6 = Class              #22            // java/lang/Object
   #7 = Utf8               <init>
   #8 = Utf8               ()V
   #9 = Utf8               Code
  #10 = Utf8               LineNumberTable
  #11 = Utf8               doSomething
  #12 = Utf8               (Ljava/util/List;)Ljava/util/List;
  #13 = Utf8               Signature
  #14 = Utf8               <T:Ljava/lang/Object;Y:Ljava/lang/Object;>(Ljava/util/List<TY;>;)Ljava/util/List<TT;>;
  #15 = Utf8               SourceFile
  #16 = Utf8               GenericMethod.java
  #17 = NameAndType        #7:#8          // "<init>":()V
  #18 = Utf8               java/lang/RuntimeException
  #19 = Utf8               x
  #20 = NameAndType        #7:#23         // "<init>":(Ljava/lang/String;)V
  #21 = Utf8               GenericMethod
  #22 = Utf8               java/lang/Object
  #23 = Utf8               (Ljava/lang/String;)V
{
  public GenericMethod();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0

  public <T extends java.lang.Object, Y extends java.lang.Object> java.util.List<T> doSomething(java.util.List<Y>);
    descriptor: (Ljava/util/List;)Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: new           #2                  // class java/lang/RuntimeException
         3: dup
         4: ldc           #3                  // String x
         6: invokespecial #4                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
         9: athrow
      LineNumberTable:
        line 6: 0
    Signature: #14                          // <T:Ljava/lang/Object;Y:Ljava/lang/Object;>(Ljava/util/List<TY;>;)Ljava/util/List<TT;>;
}
SourceFile: "GenericMethod.java"

--------------------------------------------------------------------------------

(source_file
  (header
    (header_info
      (file_path))
    (header_info_last_mod)
    (header_info_md5
      (md5))
    (header_info_compile))
  (class_info_def
    (modifiers)
    (class_keyword)
    (identifier)
    (class_info_item
      (class_info_item_simple
        (number)))
    (class_info_item
      (class_info_item_simple
        (number)))
    (class_info_item
      (flag_def
        (hex_value)
        (flag_value)
        (flag_value)))
    (class_info_item
      (class_info_item_simple
        (number)
        (comment)))
    (class_info_item
      (class_info_item_simple
        (number)
        (comment)))
    (class_info_item
      (class_info_item_simple
        (number)
        (number)
        (number)
        (number))))
  (constant_pool_def
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number)
        (number))
      (comment))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number)
        (number))
      (comment))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value)))
  (block
    (constructor_def
      (modifiers)
      (type_identifier)
      (args))
    (descriptor_def
      (descriptor_value))
    (flag_def
      (hex_value)
      (flag_value))
    (code_def
      (code_info
        (code_info_stat
          (number))
        (code_info_stat
          (number))
        (code_info_stat
          (number))
        (numered_instruction
          (number)
          (instruction))
        (numered_instruction
          (number)
          (instruction
            (number))
          (comment))
        (numered_instruction
          (number)
          (instruction)))
      (line_number_table_def
        (numered_line
          (number)
          (number))))
    (method_def
      (modifiers)
      (type_parameters
        (type_parameter
          (type_identifier)
          (type_bound
            (extends)
            (scoped_type_identifier
              (scoped_type_identifier
                (type_identifier)
                (type_identifier))
              (type_identifier))))
        (type_parameter
          (type_identifier)
          (type_bound
            (extends)
            (scoped_type_identifier
              (scoped_type_identifier
                (type_identifier)
                (type_identifier))
              (type_identifier)))))
      (generic_type
        (scoped_type_identifier
          (scoped_type_identifier
            (type_identifier)
            (type_identifier))
          (type_identifier))
        (type_arguments
          (type_identifier)))
      (identifier)
      (args
        (generic_type
          (scoped_type_identifier
            (scoped_type_identifier
              (type_identifier)
              (type_identifier))
            (type_identifier))
          (type_arguments
            (type_identifier)))))
    (descriptor_def
      (descriptor_value))
    (flag_def
      (hex_value)
      (flag_value))
    (code_def
      (code_info
        (code_info_stat
          (number))
        (code_info_stat
          (number))
        (code_info_stat
          (number))
        (numered_instruction
          (number)
          (instruction
            (number))
          (comment))
        (numered_instruction
          (number)
          (instruction))
        (numered_instruction
          (number)
          (instruction
            (number))
          (comment))
        (numered_instruction
          (number)
          (instruction
            (number))
          (comment))
        (numered_instruction
          (number)
          (instruction)))
      (line_number_table_def
        (numered_line
          (number)
          (number))))
    (method_def_verbose_sig
      (number)
      (comment)))
  (footer
    (source_file_def)))
