==============================
AbstractFactory verbose
==============================

Classfile /home/kghost/workspace/tree-sitter-javap/test/corpus/AbstractFactory.class
  Last modified Feb 19, 2022; size 544 bytes
  MD5 checksum 8dbe886601af159a571bbf0d922d74b4
  Compiled from "AbstractFactory.java"
public abstract class AbstractFactory
  minor version: 0
  major version: 55
  flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT
  this_class: #6                          // AbstractFactory
  super_class: #7                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 2, attributes: 1
Constant pool:
   #1 = Methodref          #7.#16         // java/lang/Object."<init>":()V
   #2 = Fieldref           #17.#18        // java/lang/System.out:Ljava/io/PrintStream;
   #3 = String             #19            // Hello \n World!
   #4 = Methodref          #20.#21        // java/io/PrintStream.println:(Ljava/lang/String;)V
   #5 = Methodref          #22.#23        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
   #6 = Class              #24            // AbstractFactory
   #7 = Class              #25            // java/lang/Object
   #8 = Utf8               <init>
   #9 = Utf8               ()V
  #10 = Utf8               Code
  #11 = Utf8               LineNumberTable
  #12 = Utf8               doSth
  #13 = Utf8               ([Ljava/lang/String;ILjava/io/File;)Ljava/lang/Integer;
  #14 = Utf8               SourceFile
  #15 = Utf8               AbstractFactory.java
  #16 = NameAndType        #8:#9          // "<init>":()V
  #17 = Class              #26            // java/lang/System
  #18 = NameAndType        #27:#28        // out:Ljava/io/PrintStream;
  #19 = Utf8               Hello \n World!
  #20 = Class              #29            // java/io/PrintStream
  #21 = NameAndType        #30:#31        // println:(Ljava/lang/String;)V
  #22 = Class              #32            // java/lang/Integer
  #23 = NameAndType        #33:#34        // valueOf:(I)Ljava/lang/Integer;
  #24 = Utf8               AbstractFactory
  #25 = Utf8               java/lang/Object
  #26 = Utf8               java/lang/System
  #27 = Utf8               out
  #28 = Utf8               Ljava/io/PrintStream;
  #29 = Utf8               java/io/PrintStream
  #30 = Utf8               println
  #31 = Utf8               (Ljava/lang/String;)V
  #32 = Utf8               java/lang/Integer
  #33 = Utf8               valueOf
  #34 = Utf8               (I)Ljava/lang/Integer;
{
  public AbstractFactory();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0

  protected java.lang.Integer doSth(java.lang.String[], int, java.io.File);
    descriptor: ([Ljava/lang/String;ILjava/io/File;)Ljava/lang/Integer;
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=2, locals=4, args_size=4
         0: getstatic     #2                  // Field java/lang/System.out:Ljava/io/PrintStream;
         3: ldc           #3                  // String Hello \n World!
         5: invokevirtual #4                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         8: iconst_0
         9: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
        12: areturn
      LineNumberTable:
        line 7: 0
        line 8: 8
}
SourceFile: "AbstractFactory.java"

-----------------------------
    (source_file
      (header
        (header_info
          (file_path))
        (header_info_last_mod)
        (header_info_md5
          (md5))
        (header_info_compile))
      (class_info_def
        (mod_access)
        (mod_abstract)
        (class_keyword)
        (identifier)
        (class_info_item
          (class_info_item_simple
            (number)))
        (class_info_item
          (class_info_item_simple
            (number)))
        (class_info_item
          (flag_def
            (hex_value)
            (flag_value)
            (flag_value)
            (flag_value)))
        (class_info_item
          (class_info_item_simple
            (number)
            (comment)))
        (class_info_item
          (class_info_item_simple
            (number)
            (comment)))
        (class_info_item
          (class_info_item_simple
            (number)
            (number)
            (number)
            (number))))
      (constant_pool_def
        (constant_pool_item
          (number)
          (number)
          (number)
          (comment))
        (constant_pool_item
          (number)
          (number)
          (number)
          (comment))
        (constant_pool_item
          (number)
          (number)
          (comment))
        (constant_pool_item
          (number)
          (number)
          (number)
          (comment))
        (constant_pool_item
          (number)
          (number)
          (number)
          (comment))
        (constant_pool_item
          (number)
          (number)
          (comment))
        (constant_pool_item
          (number)
          (number)
          (comment))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number)
          (number)
          (number)
          (comment))
        (constant_pool_item
          (number)
          (number)
          (comment))
        (constant_pool_item
          (number)
          (number)
          (number)
          (comment))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number)
          (number)
          (comment))
        (constant_pool_item
          (number)
          (number)
          (number)
          (comment))
        (constant_pool_item
          (number)
          (number)
          (comment))
        (constant_pool_item
          (number)
          (number)
          (number)
          (comment))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number))
        (constant_pool_item
          (number)))
      (block
        (class_definition
          (identifier)
          (descriptor_def
            (descriptor_value))
          (flag_def
            (hex_value)
            (flag_value))
          (code_def
            (code_info
              (code_info_stat
                (number))
              (code_info_stat
                (number))
              (code_info_stat
                (number))
              (numered_instruction
                (number)
                (instruction))
              (numered_instruction
                (number)
                (instruction
                  (number))
                (comment))
              (numered_instruction
                (number)
                (instruction)))
            (line_number_table_def
              (numered_line
                (number)
                (number))))
          (method_def
            (mod_access)
            (simple_type)
            (identifier)
            (method_args
              (array_type
                (simple_type))
              (simple_type)
              (simple_type))
            (descriptor_def
              (descriptor_value))
            (flag_def
              (hex_value)
              (flag_value))
            (code_def
              (code_info
                (code_info_stat
                  (number))
                (code_info_stat
                  (number))
                (code_info_stat
                  (number))
                (numered_instruction
                  (number)
                  (instruction
                    (number))
                  (comment))
                (numered_instruction
                  (number)
                  (instruction
                    (number))
                  (comment))
                (numered_instruction
                  (number)
                  (instruction
                    (number))
                  (comment))
                (numered_instruction
                  (number)
                  (instruction))
                (numered_instruction
                  (number)
                  (instruction
                    (number))
                  (comment))
                (numered_instruction
                  (number)
                  (instruction)))
              (line_number_table_def
                (numered_line
                  (number)
                  (number))
                (numered_line
                  (number)
                  (number)))))))
      (source_file_def))


