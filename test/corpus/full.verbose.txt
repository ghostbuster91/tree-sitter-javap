================================================================================
Full verbose
================================================================================

Classfile /home/kghost/workspace/tree-sitter-javap/test/corpus/Full.class
  Last modified Feb 20, 2022; size 697 bytes
  MD5 checksum e52f2011e28cac597d3c0fd89b51b586
  Compiled from "Full.java"
public class Full
  minor version: 0
  major version: 55
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #5                          // Full
  super_class: #6                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 2, attributes: 3
Constant pool:
   #1 = Methodref          #6.#31         // java/lang/Object."<init>":()V
   #2 = Class              #32            // java/lang/RuntimeException
   #3 = String             #22            // hello
   #4 = Methodref          #2.#33         // java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
   #5 = Class              #34            // Full
   #6 = Class              #35            // java/lang/Object
   #7 = Class              #36            // Full$SourceMarker
   #8 = Utf8               SourceMarker
   #9 = Utf8               InnerClasses
  #10 = Class              #37            // Full$ClassMarker
  #11 = Utf8               ClassMarker
  #12 = Class              #38            // Full$Inner
  #13 = Utf8               Inner
  #14 = Class              #39            // Full$Marker
  #15 = Utf8               Marker
  #16 = Class              #40            // Full$Annotated
  #17 = Utf8               Annotated
  #18 = Utf8               <init>
  #19 = Utf8               ()V
  #20 = Utf8               Code
  #21 = Utf8               LineNumberTable
  #22 = Utf8               hello
  #23 = Utf8               ([I)V
  #24 = Utf8               Exceptions
  #25 = Class              #41            // java/lang/IllegalArgumentException
  #26 = Utf8               RuntimeVisibleAnnotations
  #27 = Utf8               Ljava/lang/SafeVarargs;
  #28 = Utf8               SourceFile
  #29 = Utf8               Full.java
  #30 = Utf8               NestMembers
  #31 = NameAndType        #18:#19        // "<init>":()V
  #32 = Utf8               java/lang/RuntimeException
  #33 = NameAndType        #18:#42        // "<init>":(Ljava/lang/String;)V
  #34 = Utf8               Full
  #35 = Utf8               java/lang/Object
  #36 = Utf8               Full$SourceMarker
  #37 = Utf8               Full$ClassMarker
  #38 = Utf8               Full$Inner
  #39 = Utf8               Full$Marker
  #40 = Utf8               Full$Annotated
  #41 = Utf8               java/lang/IllegalArgumentException
  #42 = Utf8               (Ljava/lang/String;)V
{
  public Full();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 7: 0

  public static void hello(int...) throws java.lang.RuntimeException, java.lang.IllegalArgumentException;
    descriptor: ([I)V
    flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS
    Code:
      stack=3, locals=1, args_size=1
         0: new           #2                  // class java/lang/RuntimeException
         3: dup
         4: ldc           #3                  // String hello
         6: invokespecial #4                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
         9: athrow
      LineNumberTable:
        line 11: 0
    Exceptions:
      throws java.lang.RuntimeException, java.lang.IllegalArgumentException
    RuntimeVisibleAnnotations:
      0: #27()
        java.lang.SafeVarargs
}
SourceFile: "Full.java"
NestMembers:
  Full$SourceMarker
  Full$ClassMarker
  Full$Inner
  Full$Marker
  Full$Annotated
InnerClasses:
  public static #8= #7 of #5;             // SourceMarker=class Full$SourceMarker of class Full
  public static #11= #10 of #5;           // ClassMarker=class Full$ClassMarker of class Full
  public static #13= #12 of #5;           // Inner=class Full$Inner of class Full
  public static #15= #14 of #5;           // Marker=class Full$Marker of class Full
  public static #17= #16 of #5;           // Annotated=class Full$Annotated of class Full


--------------------------------------------------------------------------------

(source_file
  (header
    (header_info
      (file_path))
    (header_info_last_mod)
    (header_info_md5
      (md5))
    (header_info_compile))
  (class_info_def
    (modifiers)
    (class_keyword)
    (identifier)
    (class_info_item
      (class_info_item_simple
        (number)))
    (class_info_item
      (class_info_item_simple
        (number)))
    (class_info_item
      (flag_def
        (hex_value)
        (flag_value)
        (flag_value)))
    (class_info_item
      (class_info_item_simple
        (number)
        (comment)))
    (class_info_item
      (class_info_item_simple
        (number)
        (comment)))
    (class_info_item
      (class_info_item_simple
        (number)
        (number)
        (number)
        (number))))
  (constant_pool_def
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number)
        (number))
      (comment))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number)
        (number))
      (comment))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (ref_const_pool_item
        (number))
      (ref_const_pool_item
        (number))
      (comment))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value))
    (constant_pool_item
      (number)
      (value)))
  (block
    (constructor_def
      (modifiers)
      (type_identifier)
      (args))
    (descriptor_def
      (descriptor_value))
    (flag_def
      (hex_value)
      (flag_value))
    (code_def
      (code_info
        (code_info_stat
          (number))
        (code_info_stat
          (number))
        (code_info_stat
          (number))
        (numered_instruction
          (number)
          (instruction))
        (numered_instruction
          (number)
          (instruction
            (number))
          (comment))
        (numered_instruction
          (number)
          (instruction)))
      (line_number_table_def
        (numered_line
          (number)
          (number))))
    (method_def
      (modifiers)
      (primitive_type)
      (identifier)
      (args
        (vararg
          (primitive_type)))
      (method_throws
        (scoped_type_identifier
          (scoped_type_identifier
            (type_identifier)
            (type_identifier))
          (type_identifier))
        (scoped_type_identifier
          (scoped_type_identifier
            (type_identifier)
            (type_identifier))
          (type_identifier))))
    (descriptor_def
      (descriptor_value))
    (flag_def
      (hex_value)
      (flag_value)
      (flag_value)
      (flag_value))
    (code_def
      (code_info
        (code_info_stat
          (number))
        (code_info_stat
          (number))
        (code_info_stat
          (number))
        (numered_instruction
          (number)
          (instruction
            (number))
          (comment))
        (numered_instruction
          (number)
          (instruction))
        (numered_instruction
          (number)
          (instruction
            (number))
          (comment))
        (numered_instruction
          (number)
          (instruction
            (number))
          (comment))
        (numered_instruction
          (number)
          (instruction)))
      (line_number_table_def
        (numered_line
          (number)
          (number))))
    (exceptions
      (method_throws
        (scoped_type_identifier
          (scoped_type_identifier
            (type_identifier)
            (type_identifier))
          (type_identifier))
        (scoped_type_identifier
          (scoped_type_identifier
            (type_identifier)
            (type_identifier))
          (type_identifier))))
    (runtime_visible_annotations
      (runtime_visible_annotation
        (number)
        (number)
        (value))))
  (footer
    (source_file_def)
    (nested_members
      (identifier)
      (identifier)
      (identifier)
      (identifier)
      (identifier))
    (inner_classes
      (modifiers)
      (number)
      (number)
      (number)
      (comment)
      (modifiers)
      (number)
      (number)
      (number)
      (comment)
      (modifiers)
      (number)
      (number)
      (number)
      (comment)
      (modifiers)
      (number)
      (number)
      (number)
      (comment)
      (modifiers)
      (number)
      (number)
      (number)
      (comment))))
